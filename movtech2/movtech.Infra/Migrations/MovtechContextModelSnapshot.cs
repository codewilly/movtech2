// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using movtech.Infra.Context;

namespace movtech.Infra.Migrations
{
    [DbContext(typeof(MovtechContext))]
    partial class MovtechContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("movtech.Domain.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("FuelType");

                    b.Property<bool>("InGarage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<float>("Quilometers");

                    b.Property<string>("Renavam")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<int>("Status");

                    b.Property<int>("VehicleType");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasAlternateKey("LicensePlate");


                    b.HasAlternateKey("Renavam");

                    b.ToTable("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
